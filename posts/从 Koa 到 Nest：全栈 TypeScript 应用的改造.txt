1:"$Sreact.fragment"
2:I[7555,[],""]
3:I[1901,["874","static/chunks/874-16716eedeadde879.js","39","static/chunks/app/error-d036ecfd03716e30.js"],"default"]
4:I[1295,[],""]
5:I[9543,["874","static/chunks/874-16716eedeadde879.js","345","static/chunks/app/not-found-2113bbd7a2f55e8f.js"],"default"]
8:I[9665,[],"MetadataBoundary"]
a:I[9665,[],"OutletBoundary"]
d:I[4911,[],"AsyncMetadataOutlet"]
f:I[8460,["209","static/chunks/app/loading-b73dd9bd22c3caa2.js"],"default"]
10:I[9665,[],"ViewportBoundary"]
12:I[6614,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/2626867bd1decdff.css","style"]
0:{"P":null,"b":"9kXAH1_uuo8MLlXW_w4TX","p":"","c":["","posts","%E4%BB%8E%20Koa%20%E5%88%B0%20Nest%EF%BC%9A%E5%85%A8%E6%A0%88%20TypeScript%20%E5%BA%94%E7%94%A8%E7%9A%84%E6%94%B9%E9%80%A0"],"i":false,"f":[[["",{"children":["(article)",{"children":["posts",{"children":[["slug","%E4%BB%8E%20Koa%20%E5%88%B0%20Nest%EF%BC%9A%E5%85%A8%E6%A0%88%20TypeScript%20%E5%BA%94%E7%94%A8%E7%9A%84%E6%94%B9%E9%80%A0","d"],{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/2626867bd1decdff.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$3","errorStyles":[],"errorScripts":[],"template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","$L5",null,{}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["(article)",["$","$1","c",{"children":[null,"$L6"]}],{"children":["posts",["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","%E4%BB%8E%20Koa%20%E5%88%B0%20Nest%EF%BC%9A%E5%85%A8%E6%A0%88%20TypeScript%20%E5%BA%94%E7%94%A8%E7%9A%84%E6%94%B9%E9%80%A0","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L7",["$","$L8",null,{"children":"$L9"}],null,["$","$La",null,{"children":["$Lb","$Lc",["$","$Ld",null,{"promise":"$@e"}]]}]]}],{},null,false]},null,false]},null,false]},null,false]},[["$","$Lf","l",{}],[],[]],false],["$","$1","h",{"children":[null,["$","$1","SjI9qSQ5Jj-BsamwuZ2LY",{"children":[["$","$L10",null,{"children":"$L11"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],null]}],false]],"m":"$undefined","G":["$12","$undefined"],"s":false,"S":true}
13:I[8565,["874","static/chunks/874-16716eedeadde879.js","766","static/chunks/766-eeb113df4f56c105.js","651","static/chunks/app/(article)/layout-18bcffe355ed9a9b.js"],"default"]
14:I[7832,["874","static/chunks/874-16716eedeadde879.js","766","static/chunks/766-eeb113df4f56c105.js","651","static/chunks/app/(article)/layout-18bcffe355ed9a9b.js"],"default"]
15:"$Sreact.suspense"
16:I[4911,[],"AsyncMetadata"]
6:["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":[["$","div",null,{"className":"min-h-screen","children":[["$","$L13",null,{}],["$","main",null,{"className":"p-6 flex justify-center","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}],["$","footer",null,{"className":"bg-neutral-50 border-t border-neutral-200 text-center text-xs opacity-50 py-4","children":["© 2022 - ",2025,["$","a",null,{"rel":"noopener noreferrer","className":"hover:underline hover:bg-indigo","href":"https://github.com/LZS911","target":"_blank","children":", LZS_911"}],", build with"," ",["$","a",null,{"rel":"noopener noreferrer","className":"underline hover:bg-indigo","href":"https://nextjs.org/","target":"_blank","children":"Next.js"}]," ","and"," ",["$","a",null,{"rel":"noopener noreferrer","className":"underline hover:bg-indigo","href":"https://pages.github.com/?(null)","target":"_blank","children":"GitHub Pages"}]]}]]}],["$","$L14",null,{"href":"/practice"}]]}]}]
9:["$","$15",null,{"fallback":null,"children":["$","$L16",null,{"promise":"$@17"}]}]
c:null
18:I[5099,["766","static/chunks/766-eeb113df4f56c105.js","62","static/chunks/62-36d7af331e30e687.js","520","static/chunks/app/(article)/posts/%5Bslug%5D/page-2ec56518ac6621da.js"],"ThemeLoader"]
19:T23f3,<h2 id="引言"><a aria-hidden="true" tabindex="-1" href="#引言"><span class="icon icon-link"></span></a>引言</h2>
<h3 id="项目背景"><a aria-hidden="true" tabindex="-1" href="#项目背景"><span class="icon icon-link"></span></a>项目背景</h3>
<p>项目最初采用以下技术栈构建:
后端: Koa + TypeScript
数据存储: 文件系统
前端: React + Ant Design
部署: Docker</p>
<blockquote>
<p>Koa 是一个轻量级的 Node.js Web 框架,通过中间件架构提供了优雅的 API 设计。</p>
</blockquote>
<h3 id="痛点分析"><a aria-hidden="true" tabindex="-1" href="#痛点分析"><span class="icon icon-link"></span></a>痛点分析</h3>
<p>随着项目规模扩大,原有架构暴露出几个主要问题:</p>
<ol>
<li>数据存储的局限性
<ul>
<li>文件系统存储难以支持复杂查询</li>
<li>数据一致性难以保证</li>
<li>性能瓶颈明显</li>
</ul>
</li>
<li>构建部署流程繁琐
<ul>
<li>需要在 Docker 内手动克隆代码</li>
<li>部署步骤多,容易出错</li>
<li>CI/CD 支持不完善</li>
</ul>
</li>
<li>类型安全问题
<ul>
<li>前后端 API 类型定义分离</li>
<li>类型不一致导致运行时错误</li>
<li>代码维护成本高</li>
</ul>
</li>
<li>代码数据耦合
<ul>
<li>部分业务数据硬编码在代码中</li>
<li>修改数据需要重新部署</li>
<li>不利于后期维护</li>
</ul>
</li>
</ol>
<h4 id="改造的目标和预期成果"><a aria-hidden="true" tabindex="-1" href="#改造的目标和预期成果"><span class="icon icon-link"></span></a>改造的目标和预期成果。</h4>
<ol>
<li>引入 MySQL 作为数据持久层</li>
<li>优化项目构建以及发布方式</li>
<li><strong>前后端类型安全</strong></li>
<li>代码与数据解耦</li>
</ol>
<h2 id="技术选型与评估"><a aria-hidden="true" tabindex="-1" href="#技术选型与评估"><span class="icon icon-link"></span></a>技术选型与评估</h2>
<h3 id="项目结构管理"><a aria-hidden="true" tabindex="-1" href="#项目结构管理"><span class="icon icon-link"></span></a>项目结构管理</h3>
<p>使用 pnpm 作为包管理器并使用 pnpm 的多仓库模式，项目结构如下：</p>
<pre><code>├── packages/
│   ├── api-model/             # API Contract与类型定义
│   │   ├── lib/
│   │   │   ├── feature1/      # 业务模块1
│   │   │   │   ├── index.ts   # Zod schemas
│   │   │   ├── feature2/      # 业务模块2
│   │   │   │   ├── index.ts   # Zod schemas
│   │   │   └── index.ts       # 合并并导出类型
│   │   └── package.json
│   │
│   ├── app/                   # 前端应用
│   │   ├── src/
│   │   │   ├── components/
│   │   │   ├── hooks/
│   │   │   └── pages/
│   │   └── package.json
│   │
│   └── server/               # 后端服务
│       ├── src/
│       │   ├── modules/
│       │   ├── prisma/
│       │   └── main.ts
│       └── package.json
│
├── pnpm-workspace.yaml
└── package.json
</code></pre>
<h3 id="后端框架-nestjs"><a aria-hidden="true" tabindex="-1" href="#后端框架-nestjs"><span class="icon icon-link"></span></a>后端框架: Nest.js</h3>
<p>选择 Nest.js 的主要原因:</p>
<ul>
<li>完整的企业级框架支持</li>
<li>优秀的 TypeScript 支持</li>
<li>模块化架构,利于代码组织</li>
<li>丰富的生态系统</li>
</ul>
<h3 id="orm-层-prisma"><a aria-hidden="true" tabindex="-1" href="#orm-层-prisma"><span class="icon icon-link"></span></a>ORM 层: Prisma</h3>
<p>Prisma 作为现代化的 ORM 框架:</p>
<ul>
<li>类型安全的数据库访问</li>
<li>强大的数据模型定义</li>
<li>自动生成类型定义</li>
<li>支持数据库迁移</li>
</ul>
<p>Prisma &#x26; MySQL 开始指南：<a href="https://www.prisma.io/docs/getting-started/setup-prisma/start-from-scratch/relational-databases-typescript-mysql">https://www.prisma.io/docs/getting-started/setup-prisma/start-from-scratch/relational-databases-typescript-mysql</a></p>
<p>一个简单的 Prisma 配置文件示例：</p>
<pre><code>// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js" //指定生成客户端的提供者
}

datasource db {
  provider = "mysql" //指定数据库提供者
  url      = env("DATABASE_URL") //数据库连接串，这里通过环境变量的方式配置
}

// post 表结构
model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
}

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  name          String?
  password      String
  password_salt String
  posts         Post[]
  profile       Profile?
}

</code></pre>
<h3 id="ts-test"><a aria-hidden="true" tabindex="-1" href="#ts-test"><span class="icon icon-link"></span></a><a href="https://ts-rest.com/">ts-test</a></h3>
<p>ts-rest 提供了端到端的类型安全解决方案</p>
<p>完整步骤：</p>
<ol>
<li><a href="https://ts-rest.com/docs/core/">定义 <strong>Contract</strong></a></li>
<li><a href="https://ts-rest.com/docs/nest/">服务端(Nest)消费 <strong>Contract</strong></a></li>
<li><a href="https://ts-rest.com/docs/react-query/v5-setup">客户端(React)消费 <strong>Contract</strong></a></li>
</ol>
<blockquote>
<p>前置知识点 <a href="https://zod.dev/">zod</a></p>
</blockquote>
<h3 id="数据持久层"><a aria-hidden="true" tabindex="-1" href="#数据持久层"><span class="icon icon-link"></span></a>数据持久层</h3>
<p><a href="https://relph1119.github.io/mysql-learning-notes/#/mysql/00-%E4%B8%87%E9%87%8C%E9%95%BF%E5%BE%81%E7%AC%AC%E4%B8%80%E6%AD%A5%EF%BC%88%E9%9D%9E%E5%B8%B8%E9%87%8D%E8%A6%81%EF%BC%89-%E5%A6%82%E4%BD%95%E6%84%89%E5%BF%AB%E7%9A%84%E9%98%85%E8%AF%BB%E6%9C%AC%E5%B0%8F%E5%86%8C">MySQL</a></p>
<h3 id="ui"><a aria-hidden="true" tabindex="-1" href="#ui"><span class="icon icon-link"></span></a>UI</h3>
<p>调整为 React + <a href="https://ui.shadcn.com/">shadcn/ui</a> 的组合</p>
<h3 id="部署方案优化"><a aria-hidden="true" tabindex="-1" href="#部署方案优化"><span class="icon icon-link"></span></a>部署方案优化</h3>
<p>新的部署流程:</p>
<ul>
<li>构建 Docker 镜像并推送到私有仓库</li>
<li>服务器拉取 docker-compose 配置</li>
<li>自动化部署和服务编排</li>
</ul>
<h2 id="改造实施"><a aria-hidden="true" tabindex="-1" href="#改造实施"><span class="icon icon-link"></span></a>改造实施</h2>
<h3 id="阶段规划"><a aria-hidden="true" tabindex="-1" href="#阶段规划"><span class="icon icon-link"></span></a>阶段规划</h3>
<ol>
<li>数据迁移阶段</li>
</ol>
<ul>
<li>设计数据库模型</li>
<li>数据迁移脚本开发</li>
<li>数据一致性验证</li>
</ul>
<ol start="2">
<li>后端改造阶段</li>
</ol>
<ul>
<li>引入 Nest.js 框架</li>
<li>整合 Prisma ORM</li>
<li>API 层重构</li>
</ul>
<ol start="3">
<li>前端改造阶段</li>
</ol>
<ul>
<li>UI 组件迁移</li>
<li>API 调用适配</li>
<li>类型系统对接</li>
</ul>
<h4 id="数据迁移"><a aria-hidden="true" tabindex="-1" href="#数据迁移"><span class="icon icon-link"></span></a>数据迁移</h4>
<p>prisma 提供了一系列 API 直接操作数据库，以此为基本编写 node js 脚本，读取现有文件系统的数据，进行数据格式转换并调用 prisma API 将数据迁移至 MySQL。</p>
<h4 id="后端改造"><a aria-hidden="true" tabindex="-1" href="#后端改造"><span class="icon icon-link"></span></a>后端改造</h4>
<h4 id="前端改造"><a aria-hidden="true" tabindex="-1" href="#前端改造"><span class="icon icon-link"></span></a>前端改造</h4>
<h2 id="项目总结"><a aria-hidden="true" tabindex="-1" href="#项目总结"><span class="icon icon-link"></span></a>项目总结</h2>
<h3 id="关于类型安全问题"><a aria-hidden="true" tabindex="-1" href="#关于类型安全问题"><span class="icon icon-link"></span></a>关于类型安全问题</h3>
<ol>
<li>引入类型安全的好处显而易见，能够帮助开发者避免一些低级问题并降低心智负担</li>
<li>带来的问题</li>
</ol>
<ul>
<li>类型体操的维护成本</li>
<li>泛形的侵入性</li>
</ul>
<h3 id="重构过程中遇到的一些问题"><a aria-hidden="true" tabindex="-1" href="#重构过程中遇到的一些问题"><span class="icon icon-link"></span></a>重构过程中遇到的一些问题</h3>
<ol>
<li>依赖包 @octokit/core 类型问题</li>
<li>prisma 环境变量配置</li>
<li>api-model 包产物问题</li>
<li>数据库结构设计的不完善导致表结构频繁更新</li>
</ol>7:["$","article",null,{"children":[["$","div",null,{"className":"flex justify-center font-[Arial] max-w-[864px] text-center","children":["$","h1",null,{"className":"text-[2.5rem] font-bold bg-lime-300 px-5 py-2 rounded-sm text-shadow-lg leading-[1.1]","children":"从 Koa 到 Nest：全栈 TypeScript 应用的改造.md"}]}],["$","time",null,{"dateTime":"2024-11-28","className":"text-center block my-4 text-sm opacity-60","children":"November\t28, 2024"}],[null,["$","$L18",null,{"theme":"fancy"}],["$","section",null,{"className":"markdown-body-fancy max-w-3xl","dangerouslySetInnerHTML":{"__html":"$19"}}]],null]}]
11:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
b:null
17:{"metadata":[["$","title","0",{"children":"Ai.Haibara codes"}],["$","meta","1",{"name":"description","content":"LZS Blog"}],["$","link","2",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"96x96"}]],"error":null,"digest":"$undefined"}
e:{"metadata":"$17:metadata","error":null,"digest":"$undefined"}
